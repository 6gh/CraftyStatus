services:
  craftystatus:
    image: craftystatus:latest
    container_name: craftystatus
    restart: unless-stopped
    # ports:
    #   - "5000:5000"
    environment:
      # Discord Bot
      - DISCORD_TOKEN=${DISCORD_TOKEN}
      - DISCORD_OWNER_ID=${DISCORD_OWNER_ID}
      - DISCORD_PREFIX=${DISCORD_PREFIX:-cs!}

      # Crafty Controller API
      - CRAFTY_BASE_URL=${CRAFTY_BASE_URL}
      - CRAFTY_API_KEY=${CRAFTY_API_KEY}

      # Database
      - POSTGRES_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    volumes:
      - ./docker/craftystatus:/opt/craftystatus
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres:17
    container_name: craftystatus-db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./docker/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
